//
// File generated by rootcint at Thu May 13 11:03:52 2021

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME GridCanvas_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GridCanvas_Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void GridCanvas_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GridCanvas(void *p = 0);
   static void *newArray_GridCanvas(Long_t size, void *p);
   static void delete_GridCanvas(void *p);
   static void deleteArray_GridCanvas(void *p);
   static void destruct_GridCanvas(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GridCanvas*)
   {
      ::GridCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GridCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GridCanvas", ::GridCanvas::Class_Version(), "./GridCanvas.h", 14,
                  typeid(::GridCanvas), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GridCanvas::Dictionary, isa_proxy, 4,
                  sizeof(::GridCanvas) );
      instance.SetNew(&new_GridCanvas);
      instance.SetNewArray(&newArray_GridCanvas);
      instance.SetDelete(&delete_GridCanvas);
      instance.SetDeleteArray(&deleteArray_GridCanvas);
      instance.SetDestructor(&destruct_GridCanvas);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GridCanvas*)
   {
      return GenerateInitInstanceLocal((::GridCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GridCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr GridCanvas::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GridCanvas::Class_Name()
{
   return "GridCanvas";
}

//______________________________________________________________________________
const char *GridCanvas::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GridCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GridCanvas::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GridCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GridCanvas::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GridCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GridCanvas::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GridCanvas*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void GridCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class GridCanvas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GridCanvas::Class(),this);
   } else {
      R__b.WriteClassBuffer(GridCanvas::Class(),this);
   }
}

//______________________________________________________________________________
void GridCanvas::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GridCanvas.
      TClass *R__cl = ::GridCanvas::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPadsX", &fNPadsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPadsY", &fNPadsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPads", (void*)&fPads);
      R__insp.InspectMember("vector<TPad*>", (void*)&fPads, "fPads.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPads2D", (void*)&fPads2D);
      R__insp.InspectMember("vector<std::vector<TPad*> >", (void*)&fPads2D, "fPads2D.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInterpadSpace", &fInterpadSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fXTitleLatex", &fXTitleLatex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fYTitleLatex", &fYTitleLatex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitleAlignment", &fTitleAlignment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXTitle", &fXTitle);
      R__insp.InspectMember(fXTitle, "fXTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTitle", &fYTitle);
      R__insp.InspectMember(fYTitle, "fYTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXTitleDrawn", &fXTitleDrawn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTitleDrawn", &fYTitleDrawn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitleFont", &fTitleFont);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitleSize", &fTitleSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fManualXLabels", &fManualXLabels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fManualYLabels", &fManualYLabels);
      TCanvas::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GridCanvas(void *p) {
      return  p ? new(p) ::GridCanvas : new ::GridCanvas;
   }
   static void *newArray_GridCanvas(Long_t nElements, void *p) {
      return p ? new(p) ::GridCanvas[nElements] : new ::GridCanvas[nElements];
   }
   // Wrapper around operator delete
   static void delete_GridCanvas(void *p) {
      delete ((::GridCanvas*)p);
   }
   static void deleteArray_GridCanvas(void *p) {
      delete [] ((::GridCanvas*)p);
   }
   static void destruct_GridCanvas(void *p) {
      typedef ::GridCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GridCanvas

/********************************************************
* GridCanvas_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGridCanvas_Dict();

extern "C" void G__set_cpp_environmentGridCanvas_Dict() {
  G__cpp_reset_tagtableGridCanvas_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevGridCanvas_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GridCanvas */
static int G__GridCanvas_Dict_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GridCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GridCanvas[n];
     } else {
       p = new((void*) gvp) GridCanvas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GridCanvas;
     } else {
       p = new((void*) gvp) GridCanvas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GridCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GridCanvas(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) GridCanvas(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GridCanvas(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) GridCanvas(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GridCanvas(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) GridCanvas(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetXTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetYTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GridCanvas*) G__getstructoffset())->GetXTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GridCanvas*) G__getstructoffset())->GetYTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TPad*>* pobj;
         const vector<TPad*> xobj = ((const GridCanvas*) G__getstructoffset())->GetPads();
         pobj = new vector<TPad*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetHistTexts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetXLimits((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetYLimits((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetTitleAlignment((GridCanvas::ETitleAlignment) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetInterpadSpace((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetTicksx((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetTicksy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->ResetPads();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetTitleFont((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GridCanvas*) G__getstructoffset())->GetTitleFont());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->SetTitleSize((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GridCanvas*) G__getstructoffset())->GetTitleSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GridCanvas*) G__getstructoffset())->Remax((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GridCanvas*) G__getstructoffset())->Remax();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GridCanvas*) G__getstructoffset())->SetManualXLabels((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GridCanvas*) G__getstructoffset())->SetManualXLabels((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GridCanvas*) G__getstructoffset())->SetManualYLabels((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GridCanvas*) G__getstructoffset())->SetManualYLabels((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GridCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GridCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GridCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GridCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GridCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GridCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GridCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GridCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GridCanvas_Dict_253_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GridCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GridCanvas G__TGridCanvas;
static int G__GridCanvas_Dict_253_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GridCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GridCanvas*) (soff+(sizeof(GridCanvas)*i)))->~G__TGridCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GridCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GridCanvas*) (soff))->~G__TGridCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GridCanvas */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGridCanvas_Dict {
 public:
  G__Sizep2memfuncGridCanvas_Dict(): p(&G__Sizep2memfuncGridCanvas_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGridCanvas_Dict::*p)();
};

size_t G__get_sizep2memfuncGridCanvas_Dict()
{
  G__Sizep2memfuncGridCanvas_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGridCanvas_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas))) {
     GridCanvas *G__Lderived;
     G__Lderived=(GridCanvas*)0x1000;
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox2D *G__Lpbase=(TAttBBox2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas),G__get_linked_tagnum(&G__GridCanvas_DictLN_TAttBBox2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGridCanvas_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TPad*>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<TPad*> >",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TPad*> >",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TPad*,allocator<TPad*> > >",117,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GridCanvas */
static void G__setup_memvarGridCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas));
   { GridCanvas *p; p=(GridCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvascLcLETitleAlignment),-1,-2,1,G__FastAllocString(4096).Format("kAlignRight=%lldLL",(long long)GridCanvas::kAlignRight).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvascLcLETitleAlignment),-1,-2,1,G__FastAllocString(4096).Format("kAlignCenter=%lldLL",(long long)GridCanvas::kAlignCenter).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNPadsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNPadsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR),G__defined_typename("vector<TPad*>"),-1,4,"fPads=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<TPad*> >"),-1,4,"fPads2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fInterpadSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_TLatex),-1,-1,4,"fXTitleLatex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_TLatex),-1,-1,4,"fYTitleLatex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvascLcLETitleAlignment),-1,-1,4,"fTitleAlignment=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_TString),-1,-1,4,"fXTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_TString),-1,-1,4,"fYTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fXTitleDrawn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fYTitleDrawn=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fTitleFont=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTitleSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fManualXLabels=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fManualYLabels=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GridCanvas_DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGridCanvas_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGridCanvas(void) {
   /* GridCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas));
   G__memfunc_setup("GridCanvas",994,G__GridCanvas_Dict_253_0_1, 105, G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas), -1, 0, 0, 1, 1, 0, "", "To shut ROOT up", (void*) NULL, 0);
   G__memfunc_setup("GridCanvas",994,G__GridCanvas_Dict_253_0_2, 105, G__get_linked_tagnum(&G__GridCanvas_DictLN_GridCanvas), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name i - - 0 - nPadsX "
"i - - 0 - nPadsY i - - 0 '700' ww "
"i - - 0 '500' wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTitle",902,G__GridCanvas_Dict_253_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - xtitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTitle",903,G__GridCanvas_Dict_253_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ytitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXTitle",890,G__GridCanvas_Dict_253_0_5, 85, G__get_linked_tagnum(&G__GridCanvas_DictLN_TLatex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYTitle",891,G__GridCanvas_Dict_253_0_6, 85, G__get_linked_tagnum(&G__GridCanvas_DictLN_TLatex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPads",680,G__GridCanvas_Dict_253_0_7, 117, G__get_linked_tagnum(&G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR), G__defined_typename("vector<TPad*>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistTexts",1244,G__GridCanvas_Dict_253_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXLimits",1014,G__GridCanvas_Dict_253_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYLimits",1015,G__GridCanvas_Dict_253_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitleAlignment",1741,G__GridCanvas_Dict_253_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i 'GridCanvas::ETitleAlignment' - 0 - alignment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInterpadSpace",1615,G__GridCanvas_Dict_253_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - space", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogx",710,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogy",711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogz",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGridx",810,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGridy",811,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLeftMargin",1301,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - margin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRightMargin",1416,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - margin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTopMargin",1213,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - margin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBottomMargin",1535,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - margin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTicksx",930,G__GridCanvas_Dict_253_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTicksy",931,G__GridCanvas_Dict_253_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetPads",907,G__GridCanvas_Dict_253_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitleFont",1221,G__GridCanvas_Dict_253_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - font", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitleFont",1209,G__GridCanvas_Dict_253_0_27, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitleSize",1225,G__GridCanvas_Dict_253_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitleSize",1213,G__GridCanvas_Dict_253_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remax",509,G__GridCanvas_Dict_253_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '0' ymin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetManualXLabels",1589,G__GridCanvas_Dict_253_0_31, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - nLabels D - - 10 - positions "
"C - - 12 - valueStrings d - - 0 '0.1' yoffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetManualYLabels",1590,G__GridCanvas_Dict_253_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - nLabels D - - 10 - positions "
"C - - 12 - valueStrings d - - 0 '0.1' xoffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadHist",973,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__GridCanvas_DictLN_TH1), -1, 0, 1, 1, 4, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawTitles",1027,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GridCanvas_Dict_253_0_35, 85, G__get_linked_tagnum(&G__GridCanvas_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GridCanvas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GridCanvas_Dict_253_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GridCanvas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GridCanvas_Dict_253_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GridCanvas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GridCanvas_Dict_253_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GridCanvas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GridCanvas_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GridCanvas_Dict_253_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GridCanvas_Dict_253_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GridCanvas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GridCanvas_Dict_253_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GridCanvas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GridCanvas_Dict_253_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GridCanvas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GridCanvas_Dict_253_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GridCanvas::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GridCanvas", 1120, G__GridCanvas_Dict_253_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGridCanvas_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGridCanvas_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGridCanvas_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GridCanvas_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TAttPad = { "TAttPad" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TAttBBox2D = { "TAttBBox2D" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_GridCanvas = { "GridCanvas" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR = { "vector<TPad*,allocator<TPad*> >" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_reverse_iteratorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TPad*,allocator<TPad*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_GridCanvascLcLETitleAlignment = { "GridCanvas::ETitleAlignment" , 101 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR = { "vector<vector<TPad*,allocator<TPad*> >,allocator<vector<TPad*,allocator<TPad*> > > >" , 99 , -1 };
G__linked_taginfo G__GridCanvas_DictLN_reverse_iteratorlEvectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TPad*,allocator<TPad*> >,allocator<vector<TPad*,allocator<TPad*> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGridCanvas_Dict() {
  G__GridCanvas_DictLN_TClass.tagnum = -1 ;
  G__GridCanvas_DictLN_TBuffer.tagnum = -1 ;
  G__GridCanvas_DictLN_TMemberInspector.tagnum = -1 ;
  G__GridCanvas_DictLN_TObject.tagnum = -1 ;
  G__GridCanvas_DictLN_TString.tagnum = -1 ;
  G__GridCanvas_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GridCanvas_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GridCanvas_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GridCanvas_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GridCanvas_DictLN_TAttPad.tagnum = -1 ;
  G__GridCanvas_DictLN_TAttLine.tagnum = -1 ;
  G__GridCanvas_DictLN_TAttFill.tagnum = -1 ;
  G__GridCanvas_DictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__GridCanvas_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GridCanvas_DictLN_TQObject.tagnum = -1 ;
  G__GridCanvas_DictLN_TCanvas.tagnum = -1 ;
  G__GridCanvas_DictLN_TVirtualPad.tagnum = -1 ;
  G__GridCanvas_DictLN_TAttBBox2D.tagnum = -1 ;
  G__GridCanvas_DictLN_TPad.tagnum = -1 ;
  G__GridCanvas_DictLN_TLatex.tagnum = -1 ;
  G__GridCanvas_DictLN_TH1.tagnum = -1 ;
  G__GridCanvas_DictLN_GridCanvas.tagnum = -1 ;
  G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR.tagnum = -1 ;
  G__GridCanvas_DictLN_reverse_iteratorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GridCanvas_DictLN_GridCanvascLcLETitleAlignment.tagnum = -1 ;
  G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__GridCanvas_DictLN_reverse_iteratorlEvectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGridCanvas_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TString);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TAttPad);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TVirtualPad);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TAttBBox2D);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TPad);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TLatex);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_GridCanvas),sizeof(GridCanvas),-1,324864,(char*)NULL,G__setup_memvarGridCanvas,G__setup_memfuncGridCanvas);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_vectorlETPadmUcOallocatorlETPadmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_GridCanvascLcLETitleAlignment);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_vectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GridCanvas_DictLN_reverse_iteratorlEvectorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRcOallocatorlEvectorlETPadmUcOallocatorlETPadmUgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupGridCanvas_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGridCanvas_Dict()");
  G__set_cpp_environmentGridCanvas_Dict();
  G__cpp_setup_tagtableGridCanvas_Dict();

  G__cpp_setup_inheritanceGridCanvas_Dict();

  G__cpp_setup_typetableGridCanvas_Dict();

  G__cpp_setup_memvarGridCanvas_Dict();

  G__cpp_setup_memfuncGridCanvas_Dict();
  G__cpp_setup_globalGridCanvas_Dict();
  G__cpp_setup_funcGridCanvas_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGridCanvas_Dict();
  return;
}
class G__cpp_setup_initGridCanvas_Dict {
  public:
    G__cpp_setup_initGridCanvas_Dict() { G__add_setup_func("GridCanvas_Dict",(G__incsetup)(&G__cpp_setupGridCanvas_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGridCanvas_Dict() { G__remove_setup_func("GridCanvas_Dict"); }
};
G__cpp_setup_initGridCanvas_Dict G__cpp_setup_initializerGridCanvas_Dict;

